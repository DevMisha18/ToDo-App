import Head from "next/head";
import { useState } from "react";
import {
  Container,
  Box,
  Button,
  Typography,
  InputLabel,
  Select,
  MenuItem,
  FormControl,
} from "@mui/material";
import { Header } from "@/components/Header";
import { TodoCard } from "@/components/TodoCard";
import { CreateTodoForm } from "@/components/CreateTodoForm";
import { useGetTodosQuery } from "@/features/todos/todosApi";
import { useThemeContext } from "@/contexts/ThemeContext";
import { ToastContainer, Bounce } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export default function Home() {
  const { mode } = useThemeContext();
  const { data: todos, isLoading } = useGetTodosQuery();
  const [time, setTime] = useState("");
  const [showCreateTodoForm, setShowCreateTodoForm] = useState(false);

  return (
    <>
      <Head>
        <title>ToDo App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      {/* FIX THE BLUR EFFECT */}
      {/* You have to create div and lay it on top of everything with bg blur */}
      <Container>
        <Typography
          variant="h3"
          sx={{
            margin: 2,
            textAlign: "center",
            fontWeight: 700,
          }}
        >
          TODO LIST
        </Typography>
        <Box
          sx={{
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            width: "100%",
            padding: 2,
          }}
        >
          <Button
            variant="contained"
            size="large"
            color="secondary"
            onClick={() => setShowCreateTodoForm(true)}
          >
            Add Task
          </Button>
          <FormControl sx={{ minWidth: 160 }}>
            <InputLabel id="time-select-label">Time</InputLabel>
            <Select
              labelId="time-select-label"
              value={time}
              label="Time"
              onChange={(e) => setTime(e.target.value)}
            >
              <MenuItem value="all">All</MenuItem>
              <MenuItem value="today">Today</MenuItem>
              <MenuItem value="last week">Last Week</MenuItem>
            </Select>
          </FormControl>
        </Box>
        <Box
          sx={{
            display: "flex",
            flexDirection: "column",
            gap: 2,
          }}
        >
          {isLoading && <Typography>Loading todos...</Typography>}
          {todos && Array.isArray(todos) && todos.length > 0
            ? todos.map((todo) => <TodoCard key={todo.id} {...todo} />)
            : !isLoading && <Typography>No todos found.</Typography>}
        </Box>
      </Container>
      {showCreateTodoForm && (
        <Box
          sx={{
            position: "fixed",
            top: 0,
            left: 0,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            width: "100vw",
            height: "100vh",
            backgroundColor: "255,255,255,0.8",
            backdropFilter: "blur(5px)",
            zIndex: 1000,
          }}
          onClick={() => setShowCreateTodoForm(false)}
        >
          <CreateTodoForm {...{ setShowCreateTodoForm }} />
        </Box>
      )}
      <ToastContainer
        position="bottom-right"
        autoClose={2000}
        closeOnClick
        theme={mode}
        transition={Bounce}
      />
    </>
  );
}
